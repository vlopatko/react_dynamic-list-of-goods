{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","className","color","name","id","getAll","fetch","then","response","json","catch","Error","App","useState","prepareList","setPrepareList","type","onClick","a","sort","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,UAAS,UAAKD,EAAKE,OAHrB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,WACL,MAAM,IAAIC,MAAM,0BCAf,IAAMC,EAAgB,WAC3B,MAAsCC,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKd,UAAU,MAAf,UACE,uDAEA,wBACEe,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAC,EAAA,kEAAYH,EAAZ,SAAiCV,IAAjC,uGAHX,4BAQA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAAO,sBAAE,sBAAAC,EAAA,kEAAYH,EAAZ,SDbRV,IACJE,MAAK,SAAAT,GAAK,OACTA,EACGqB,MAAK,SAACD,EAASE,GAAV,OAAsBF,EAAEf,KAAKkB,cAAcD,EAAEjB,SAClDmB,MAAM,EAAG,MCSD,uGAHX,gCAQA,wBACEN,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAC,EAAA,kEAAYH,EAAZ,SDZRV,IACJE,MAAK,SAAAT,GAAK,OACTA,EACGyB,QAAO,SAACvB,GAAD,MAA+B,QAAfA,EAAKE,YCSpB,uGAHX,4BAQA,cAAC,EAAD,CAAWJ,MAAOgB,QCrCxBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6de5012.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={`${good.color}`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .catch(() => {\n      throw new Error('Try to reload later');\n    });\n}\n\nexport function get5First(): Promise<Good[]> {\n  return getAll()\n    .then(goods => (\n      goods\n        .sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n        .slice(0, 5)\n    ));\n}\n\nexport function getRedGoods(): Promise<Good[]> {\n  return getAll()\n    .then(goods => (\n      goods\n        .filter((good: Good) => good.color === 'red')\n    ));\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [prepareList, setPrepareList] = useState<Good[]>([]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={async () => setPrepareList(await getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={async () => setPrepareList(await get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={async () => setPrepareList(await getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={prepareList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}